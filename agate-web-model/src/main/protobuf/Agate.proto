package obiba.agate;

option java_package = "org.obiba.agate.web.model";

message SessionDto {
  required string username = 1;
  required string role = 2;
  required string realm = 3;
}

message TicketDto {
  message Event {
    optional string application = 1;
    required string action = 2;
    required string time = 3;
  }
  required string id = 1;
  optional TimestampsDto timestamps = 2;
  required string token = 3;
  required string username = 4;
  required bool remembered = 5;
  repeated Event events = 6;
  optional string expires = 7;
}

message TimestampsDto {
  optional string created = 1;
  optional string lastUpdate = 2;
}

message AttributeConfigurationDto {
  required string name = 1;
  required bool required = 2;
  required string type = 3;
  repeated string values = 4;
}

message ConfigurationDto {
  required string name = 1;
  optional string domain = 2;
  required int32 shortTimeout = 3; // hours
  required int32 longTimeout = 4; // hours
  repeated AttributeConfigurationDto userAttributes = 5;
  required int32 inactiveTimeout = 6; // hours
}

message AttributeDto {
  required string name = 1;
  optional string value = 2;
}

message UserCreateFormDto {
  required UserDto user = 1;
  required string password = 2;
}

message UserDto {
  optional string id = 1;
  required string name = 2;
  required string realm = 3;
  optional string firstName = 4;
  optional string lastName = 5;
  required string email = 6;
  repeated AttributeDto attributes = 7;
  required string role = 8;
  required string status = 9;
  repeated string groups = 10;
  repeated string applications = 11;
  optional TimestampsDto timestamps = 12;
}

message GroupDto {
  optional string id = 1;
  required string name = 2;
  optional string description = 3;
  optional TimestampsDto timestamps = 4;
  repeated string applications = 5;
}

message ApplicationDto {
  optional string id = 1;
  required string name = 2;
  required string key = 3;
  optional string description = 4;
  optional TimestampsDto timestamps = 5;
}

message ConfirmForm {
  required string username = 1;
  required string key = 2;
  required string password = 3;
}

enum KeyType {
  KEY_PAIR = 0;
  CERTIFICATE = 1;
}

message KeyDto {
  required string alias = 1;
  required string certificate = 2;
  required KeyType keyType = 3;
}

message KeyForm {
  optional string alias = 1;
  optional PrivateKeyForm privateForm = 2;
  optional string privateImport = 3;

  optional PublicKeyForm publicForm = 4;
  optional string publicImport = 5;
  optional string certificateFile = 6;

  required KeyType keyType = 7;
}

message PrivateKeyForm {
  required string algo = 1;
  required int32 size = 2;
}

message PublicKeyForm {
  required string name = 1;
  required string organizationalUnit = 2;
  required string organization = 3;
  required string locality = 4;
  required string state = 5;
  required string country = 6;
}
